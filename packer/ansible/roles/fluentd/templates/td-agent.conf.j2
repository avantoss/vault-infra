<source>  
  @type tail
  path /var/log/vault/vault_audit.log
  pos_file /var/log/td-agent/vault.audit_log.pos
  <parse>
    @type json
    time_format "%Y-%m-%dT%H:%M:%S.%N%z"
    keep_time_key true
  </parse>
  tag vault.audit
</source>  

<source>
  @type tail
  format /^(?<time>[^ ]+) \[(?<severity>[^ ]+)\][ ]+(?<source>[^:]+): (?<message>.*)/
  time_format "%Y-%m-%dT%H:%M:%S.%N%z"
  keep_time_key true
  path /var/log/vault/server.log
  pos_file /var/lib/td-agent/vault.server.pos
  read_from_head true
  tag vault.server
</source>

<filter vault.audit>
  @type record_transformer
  enable_ruby true
  <record>
    message "${record.dig('request', 'id') || '-'} ${record.dig('request', 'remote_address') || '-'} ${record.dig('auth', 'display_name') || '-'} ${record.dig('request', 'operation') || '-'} ${record.dig('request', 'path') || '-'}"
    host "#{Socket.gethostname}"
  </record>
</filter>

<filter vault.server>
  @type record_transformer
  enable_ruby true
  <record>
    message "${record['source']}: ${record['message']}"
    severity "${(record['severity'] || '').downcase}"
    host "#{Socket.gethostname}"
  </record>
</filter>

<match *.**>  
  @type copy
  <store>
    @type s3

    aws_key_id {{ aws_access_key }}
    aws_sec_key {{ aws_secret_key }}
    s3_bucket {{ bucket }}
    path "%Y/%m/%d/#{Socket.gethostname}/"

    <buffer tag,time>
      @type file
      path /var/log/td-agent/s3
      timekey 3600 # 1 hour partition
      timekey_wait 10m
      timekey_use_utc true # use utc
      chunk_limit_size 32m
    </buffer>

  </store>
  <store>
    @type elasticsearch

    @log_level info
    include_tag_key true
    host elastic.infra.tstllc.net
    port 443
    scheme https
    ssl_version TLSv1_2

    logstash_prefix vault
    logstash_format true

    <buffer tag,time>
      @type file
      path /var/log/td-agent/elasticsearch

      timekey_wait 1m
      timekey 30m

      flush_mode interval
      flush_interval 1m
      flush_thread_count 3

      retry_max_interval 60
      retry_forever
      retry_type exponential_backoff

      chunk_limit_size 16m
      queue_limit_length 96
      overflow_action block
    </buffer>
  </store>
</match>  
